{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-09T08:57:03.621Z",
    "end": "2023-05-09T08:57:11.286Z",
    "duration": 7665,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0a6b9634-e951-41ca-bc78-9fddeb2b1ac2",
      "title": "",
      "fullFile": "cypress\\e2e\\webUIAutomation\\test\\HomePageScenario.js",
      "file": "cypress\\e2e\\webUIAutomation\\test\\HomePageScenario.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b6b92a83-e432-47f6-83d3-3c61fc49a220",
          "title": "Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Home Page",
              "fullTitle": "Test Suite Test Home Page",
              "timedOut": null,
              "duration": 4249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('url') + \"/angularpractice/\");\nhome.getName().type(this.data.name);\nhome.getEmail().type(this.data.email);\nhome.getPassword().type(this.data.password);\nhome.getCheckbox().check().should('be.checked');\nhome.getGender().select(this.data.gender);\nhome.getEmploymentStatus().check(this.data.employmentStatusValue);\nhome.getEmploymentStatus().each(($el, index, $list) => {\n  home.getEmploymentStatus().eq(index).next().then(function (radioButton) {\n    const radioName = radioButton.text();\n    if (radioName == this.data.employmentStatus) {\n      cy.wrap($el).click();\n    }\n  });\n});\nhome.getDateOfBirth().type(this.data.dob);\nhome.getSubmitButton().click();\nhome.getTwoWayBinding().should('have.value', this.data.name);\nhome.getSuccessMessage().should('be.visible');",
              "err": {},
              "uuid": "73f01c7d-c222-4f1c-85a0-b8dbc377bbf8",
              "parentUUID": "b6b92a83-e432-47f6-83d3-3c61fc49a220",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73f01c7d-c222-4f1c-85a0-b8dbc377bbf8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}