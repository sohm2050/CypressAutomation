{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-08T13:53:07.595Z",
    "end": "2023-05-08T13:53:26.732Z",
    "duration": 19137,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bb99dcd9-b13e-4654-ba9d-deb78b55498f",
      "title": "",
      "fullFile": "cypress\\e2e\\webUIAutomation\\test\\E2EScenario.js",
      "file": "cypress\\e2e\\webUIAutomation\\test\\E2EScenario.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fe317677-94cc-444c-b776-98ae97f03729",
          "title": "Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Home Page",
              "fullTitle": "Test Suite Test Home Page",
              "timedOut": null,
              "duration": 14314,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('url') + \"/angularpractice/\");\nhome.getName().type(this.data.name);\nhome.getEmail().type(this.data.email);\nhome.getPassword().type(this.data.password);\nhome.getCheckbox().check().should('be.checked');\nhome.getGender().select(this.data.gender);\nhome.getEmploymentStatus().check(this.data.employmentStatusValue);\nhome.getEmploymentStatus().each(($el, index, $list) => {\n  home.getEmploymentStatus().eq(index).next().then(function (radioButton) {\n    const radioName = radioButton.text();\n    if (radioName == this.data.employmentStatus) {\n      cy.wrap($el).click();\n    }\n  });\n});\nhome.getDateOfBirth().type(this.data.dob);\nhome.getSubmitButton().click();\nhome.getTwoWayBinding().should('have.value', this.data.name);\nhome.getSuccessMessage().should('be.visible');\nhome.getShopLink().click();\ncy.url().should('include', 'shop');\nthis.data.productName.forEach(mobileName => {\n  cy.selectProduct(mobileName);\n});\nshop.getcheckoutButton().click();\nvar sum = 0;\ncheckout.getTotal().each(($el, index, $list) => {\n  var amount = Number($el.text().split(\" \")[1].trim());\n  sum = sum + amount;\n}).then(function () {\n  checkout.getGrandTotal().then(function (grandTotal) {\n    var finalTotal = Number(grandTotal.text().split(\" \")[1].trim());\n    expect(finalTotal).to.equal(sum);\n  });\n});\nCypress.config('defaultCommandTimeout', 8000);\ncheckout.getCheckoutFinalButton().click();\ncheckout.getCountryInput().type(this.data.countryName);\ncheckout.getCountrySuggesstion().click();\ncheckout.getTermsAndConditionCheckbox().check({\n  force: true\n}).should('be.checked');\ncheckout.getPurchaseButton().click();\ncheckout.getOrderPlacedSuccessMessage().then(function (validationMsg) {\n  var flag = validationMsg.text().includes('Success');\n  expect(flag).to.equal(true);\n});",
              "err": {},
              "uuid": "c8cf13c9-25a3-4bc6-ada3-0c3372514afd",
              "parentUUID": "fe317677-94cc-444c-b776-98ae97f03729",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8cf13c9-25a3-4bc6-ada3-0c3372514afd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14314,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}